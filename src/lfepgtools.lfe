(defmodule lfepgtools
  (export (poolspec 7)
          (query-one 4)
          (query-many 4)
          (execute 3)))

(defun poolspec (pool-name size max-overflow host database username password)
  (tuple pool-name
         (list (tuple 'size size)
               (tuple 'max_overflow max-overflow))
         (list (tuple 'host host)
               (tuple 'database database)
               (tuple 'username username)
               (tuple 'password password))))

(defun query-one (pool-name sql parameters row-converter)
  (case (pgapp:query pool-name sql parameters)
    ((= (tuple 'error reason) error)
     error)
    ((tuple 'ok _columns '())
     (tuple 'error 'undefined))
    ((tuple 'ok _columns (cons row rest)) (when (=/= rest '()))
     (tuple 'error 'multiple-rows))
    ((tuple 'ok _columns (list row))
     (tuple 'ok (funcall row-converter row)))))

(defun query-many (pool-name sql parameters row-converter)
  (case (pgapp:query pool-name sql parameters)
    ((tuple 'ok _columns rows) 
     (tuple 'ok (lists:map row-converter rows)))
    ((= (tuple 'error reason) error)
     error)))

(defun execute (pool-name sql parameters)
  (case (pgapp:query pool-name sql parameters)
    ((tuple 'ok _columns _rows) 
     'ok)
    ((= (tuple 'error reason) error)
     error)))
